apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-server
  namespace: sonarqube-mcp
  labels:
    app: mcp-server
    component: api-server
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: mcp-server
  template:
    metadata:
      labels:
        app: mcp-server
        component: api-server
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: mcp-server
        image: sonarqube-mcp/mcp-server:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: SONARQUBE_URL
          valueFrom:
            configMapKeyRef:
              name: sonarqube-mcp-config
              key: SONARQUBE_URL
        - name: SONARQUBE_TOKEN
          valueFrom:
            secretKeyRef:
              name: sonarqube-mcp-secrets
              key: sonarqube-token
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: sonarqube-mcp-config
              key: REDIS_URL
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sonarqube-mcp-secrets
              key: redis-password
        - name: CACHE_TTL
          valueFrom:
            configMapKeyRef:
              name: sonarqube-mcp-config
              key: CACHE_TTL
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: sonarqube-mcp-config
              key: LOG_LEVEL
        - name: SERVER_DEBUG
          valueFrom:
            configMapKeyRef:
              name: sonarqube-mcp-config
              key: SERVER_DEBUG
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-server-service
  namespace: sonarqube-mcp
  labels:
    app: mcp-server
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  selector:
    app: mcp-server
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mcp-server-hpa
  namespace: sonarqube-mcp
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mcp-server
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60