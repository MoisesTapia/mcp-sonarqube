# Staging Environment Configuration for SonarQube MCP
# =============================================================================
# CORE SERVICES CONFIGURATION
# =============================================================================

# SonarQube Configuration
SONARQUBE_URL=http://sonarqube:9000/sonarqube
SONARQUBE_TOKEN=${SONARQUBE_TOKEN}  # Set via Docker secrets or CI/CD
SONARQUBE_ORGANIZATION=${SONARQUBE_ORGANIZATION}

# PostgreSQL Database Configuration
POSTGRES_DB=sonarqube_staging
POSTGRES_USER=sonarqube_staging
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # Set via Docker secrets
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Redis Cache Configuration
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
REDIS_PASSWORD=${REDIS_PASSWORD}  # Set via Docker secrets
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# MCP Server Configuration
MCP_SERVER_HOST=0.0.0.0
MCP_SERVER_PORT=8000
MCP_SERVER_LOG_LEVEL=INFO
MCP_SERVER_URL=http://mcp-server:8000

# Streamlit Configuration
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=0.0.0.0
STREAMLIT_SERVER_HEADLESS=true
STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
STREAMLIT_SERVER_ENABLE_CORS=false
STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=true

# =============================================================================
# PERFORMANCE AND CACHING
# =============================================================================

# Cache Configuration
CACHE_TTL=300  # 5 minutes
CACHE_ENABLED=true
CACHE_MAX_SIZE=5000

# Performance Configuration
MAX_RETRIES=3
REQUEST_TIMEOUT=30
CONNECTION_POOL_SIZE=10
MAX_CONNECTIONS=100

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Security Configuration
SECRET_KEY=${SECRET_KEY}  # Set via Docker secrets
HTTPS_ONLY=true
SECURE_COOKIES=true
SESSION_TIMEOUT=1800  # 30 minutes

# SSL Configuration
SSL_CERT_PATH=/etc/ssl/certs/app.crt
SSL_KEY_PATH=/etc/ssl/private/app.key

# =============================================================================
# LOGGING AND DEBUGGING
# =============================================================================

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/sonarqube-mcp-staging.log
SERVER_DEBUG=false

# Development Configuration
DEBUG=false
DEVELOPMENT_MODE=false
ENABLE_PROFILING=false

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Prometheus Configuration
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
PROMETHEUS_RETENTION_TIME=15d

# Grafana Configuration
GRAFANA_USER=${GRAFANA_USER}  # Set via Docker secrets
GRAFANA_PASSWORD=${GRAFANA_PASSWORD}  # Set via Docker secrets
GRAFANA_PORT=3000
GRAFANA_ALLOW_SIGNUP=false

# Alerting Configuration
ALERTMANAGER_ENABLED=true
ALERT_EMAIL_TO=staging-alerts@example.com
ALERT_WEBHOOK_URL=${ALERT_WEBHOOK_URL}

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker Compose Configuration
COMPOSE_PROJECT_NAME=sonarqube-mcp-staging

# Resource Limits (staging)
POSTGRES_MEMORY_LIMIT=512m
REDIS_MEMORY_LIMIT=256m
SONARQUBE_MEMORY_LIMIT=2g
MCP_SERVER_MEMORY_LIMIT=1g
STREAMLIT_MEMORY_LIMIT=1g
NGINX_MEMORY_LIMIT=128m
PROMETHEUS_MEMORY_LIMIT=512m
GRAFANA_MEMORY_LIMIT=256m

# Port Configuration
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=7
BACKUP_S3_BUCKET=${BACKUP_S3_BUCKET}
BACKUP_S3_REGION=${BACKUP_S3_REGION}

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Feature Flags
ENABLE_METRICS_COLLECTION=true
ENABLE_HEALTH_CHECKS=true
ENABLE_BACKUP_AUTOMATION=true
ENABLE_SSL_VERIFICATION=true
ENABLE_RATE_LIMITING=true

# JVM Configuration
SONAR_WEB_JAVAOPTS=-Xmx1G -Xms512m -XX:+UseG1GC
SONAR_CE_JAVAOPTS=-Xmx1G -Xms512m -XX:+UseG1GC

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# Email Configuration
SMTP_HOST=${SMTP_HOST}
SMTP_PORT=587
SMTP_USER=${SMTP_USER}
SMTP_PASSWORD=${SMTP_PASSWORD}
SMTP_FROM=noreply@staging.example.com

# Webhook Configuration
WEBHOOK_SECRET=${WEBHOOK_SECRET}
WEBHOOK_TIMEOUT=30