# Production Environment Configuration for SonarQube MCP
# IMPORTANT: All sensitive values should be set via Docker secrets or secure CI/CD

# =============================================================================
# CORE SERVICES CONFIGURATION
# =============================================================================

# SonarQube Configuration
SONARQUBE_URL=http://sonarqube:9000/sonarqube
SONARQUBE_TOKEN=${SONARQUBE_TOKEN}  # REQUIRED: Set via Docker secrets
SONARQUBE_ORGANIZATION=${SONARQUBE_ORGANIZATION}

# PostgreSQL Database Configuration
POSTGRES_DB=sonarqube
POSTGRES_USER=sonarqube
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # REQUIRED: Set via Docker secrets
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Redis Cache Configuration
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
REDIS_PASSWORD=${REDIS_PASSWORD}  # REQUIRED: Set via Docker secrets
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# MCP Server Configuration
MCP_SERVER_HOST=0.0.0.0
MCP_SERVER_PORT=8001
MCP_SERVER_LOG_LEVEL=INFO
MCP_SERVER_URL=http://mcp-server:8001

# Streamlit Configuration
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=0.0.0.0
STREAMLIT_SERVER_HEADLESS=true
STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
STREAMLIT_SERVER_ENABLE_CORS=false
STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=true

# =============================================================================
# PERFORMANCE AND CACHING
# =============================================================================

# Cache Configuration
CACHE_TTL=300  # 5 minutes
CACHE_ENABLED=true
CACHE_MAX_SIZE=10000

# Performance Configuration
MAX_RETRIES=3
REQUEST_TIMEOUT=30
CONNECTION_POOL_SIZE=20
MAX_CONNECTIONS=200

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Security Configuration
SECRET_KEY=${SECRET_KEY}  # REQUIRED: Set via Docker secrets (min 32 chars)
HTTPS_ONLY=true
SECURE_COOKIES=true
SESSION_TIMEOUT=1800  # 30 minutes

# SSL Configuration
SSL_CERT_PATH=/etc/ssl/certs/app.crt
SSL_KEY_PATH=/etc/ssl/private/app.key
SSL_VERIFY_PEER=true

# Authentication Configuration
JWT_SECRET=${JWT_SECRET}  # REQUIRED: Set via Docker secrets
JWT_EXPIRATION=3600  # 1 hour

# =============================================================================
# LOGGING AND DEBUGGING
# =============================================================================

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/sonarqube-mcp.log
SERVER_DEBUG=false

# Development Configuration
DEBUG=false
DEVELOPMENT_MODE=false
ENABLE_PROFILING=false

# Log Rotation
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=10
LOG_RETENTION_DAYS=30

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Prometheus Configuration
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
PROMETHEUS_RETENTION_TIME=30d

# Grafana Configuration
GRAFANA_USER=${GRAFANA_USER}  # REQUIRED: Set via Docker secrets
GRAFANA_PASSWORD=${GRAFANA_PASSWORD}  # REQUIRED: Set via Docker secrets
GRAFANA_PORT=3000
GRAFANA_DOMAIN=${GRAFANA_DOMAIN}
GRAFANA_ALLOW_SIGNUP=false

# Alerting Configuration
ALERTMANAGER_ENABLED=true
ALERT_EMAIL_TO=${ALERT_EMAIL_TO}
ALERT_EMAIL_FROM=alerts@example.com
ALERT_WEBHOOK_URL=${ALERT_WEBHOOK_URL}
ALERT_SLACK_WEBHOOK=${ALERT_SLACK_WEBHOOK}

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker Compose Configuration
COMPOSE_PROJECT_NAME=sonarqube-mcp

# Resource Limits (production)
POSTGRES_MEMORY_LIMIT=1g
REDIS_MEMORY_LIMIT=512m
SONARQUBE_MEMORY_LIMIT=4g
MCP_SERVER_MEMORY_LIMIT=1g
STREAMLIT_MEMORY_LIMIT=1g
NGINX_MEMORY_LIMIT=256m
PROMETHEUS_MEMORY_LIMIT=1g
GRAFANA_MEMORY_LIMIT=512m

# Port Configuration
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_ENCRYPTION_KEY=${BACKUP_ENCRYPTION_KEY}  # Set via Docker secrets

# S3 Backup Configuration
BACKUP_S3_ENABLED=true
BACKUP_S3_BUCKET=${BACKUP_S3_BUCKET}
BACKUP_S3_REGION=${BACKUP_S3_REGION}
BACKUP_S3_ACCESS_KEY=${BACKUP_S3_ACCESS_KEY}  # Set via Docker secrets
BACKUP_S3_SECRET_KEY=${BACKUP_S3_SECRET_KEY}  # Set via Docker secrets

# =============================================================================
# HIGH AVAILABILITY CONFIGURATION
# =============================================================================

# Load Balancer Configuration
LOAD_BALANCER_ENABLED=true
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# Auto-scaling Configuration
AUTO_SCALING_ENABLED=false
MIN_REPLICAS=1
MAX_REPLICAS=3
CPU_THRESHOLD=70
MEMORY_THRESHOLD=80

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Feature Flags
ENABLE_METRICS_COLLECTION=true
ENABLE_HEALTH_CHECKS=true
ENABLE_BACKUP_AUTOMATION=true
ENABLE_SSL_VERIFICATION=true
ENABLE_RATE_LIMITING=true
ENABLE_API_VERSIONING=true
ENABLE_AUDIT_LOGGING=true

# JVM Configuration
SONAR_WEB_JAVAOPTS=-Xmx2G -Xms1G -XX:+UseG1GC
SONAR_CE_JAVAOPTS=-Xmx2G -Xms1G -XX:+UseG1GC

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# Email Configuration
SMTP_HOST=${SMTP_HOST}
SMTP_PORT=587
SMTP_USER=${SMTP_USER}
SMTP_PASSWORD=${SMTP_PASSWORD}  # Set via Docker secrets
SMTP_FROM=noreply@example.com
SMTP_TLS=true

# Webhook Configuration
WEBHOOK_SECRET=${WEBHOOK_SECRET}  # Set via Docker secrets
WEBHOOK_TIMEOUT=30
WEBHOOK_RETRY_COUNT=3

# API Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=20

# =============================================================================
# COMPLIANCE AND SECURITY
# =============================================================================

# Compliance Configuration
AUDIT_LOG_ENABLED=true
AUDIT_LOG_RETENTION_DAYS=365
DATA_RETENTION_DAYS=2555  # 7 years

# Security Headers
SECURITY_HEADERS_ENABLED=true
CONTENT_SECURITY_POLICY=default-src 'self'
X_FRAME_OPTIONS=DENY
X_CONTENT_TYPE_OPTIONS=nosniff

# =============================================================================
# DISASTER RECOVERY
# =============================================================================

# Disaster Recovery Configuration
DR_ENABLED=true
DR_BACKUP_FREQUENCY=6h
DR_REPLICATION_ENABLED=false
DR_FAILOVER_TIMEOUT=300s